---

- name: Install Grok dependencies (apt)
  apt:
    name: "{{ item }}"
    update_cache: yes
    cache_valid_time: 600
  with_items:
    - cmake
    - libpng16-dev
    - libtiff-dev
    - liblcms2-dev
  when: ansible_os_family == "Debian"

- name: Install Grok dependencies (yum)
  yum:
    name: "{{ item }}"
  with_items:
    - cmake3
    - libpng-devel
    - libtiff-devel
    - lcms2-devel
  when: ansible_os_family == "RedHat"

- name: Clone Grok
  git:
    repo: https://github.com/GrokImageCompression/grok.git
    dest: "{{ grok_clone_directory }}"
    version: "{{ grok_version_tag }}"

- name: Make build directory
  file:
    path: "{{ grok_clone_directory }}/build"
    state: directory
    mode: "0755"

- name: Cmake grok (Debian)
  command: cmake ../
  args:
    chdir: "{{ grok_clone_directory }}/build"
    creates: "{{ grok_clone_directory }}/build/*.cmake"
  when: ansible_os_family == "Debian"

- name: Cmake grok (RH/CentOS)
  command: "cmake3 {{ grok_clone_directory }} -DBUILD_THIRDPARTY=ON"
  args:
    chdir: "{{ grok_clone_directory }}/build"
    creates: "{{ grok_clone_directory }}/build/*.cmake"
  when: ansible_os_family == "RedHat"

- name: Make grok
  command: make
  args:
    chdir: "{{ grok_clone_directory }}/build"
    creates: "{{ grok_clone_directory }}/build/bin/opj_decompress"

- name: Install grok
  command: make install
  args:
    chdir: "{{ grok_clone_directory }}/build"
    creates: /usr/local/bin/opj_decompress
  register: grok_make_install

- name: Update ldconfig
  command: ldconfig
  when: grok_make_install.changed
